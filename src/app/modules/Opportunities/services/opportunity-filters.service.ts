import { Injectable, inject } from "@angular/core";
import { marker as _ } from "@biesbjerg/ngx-translate-extract-marker";
import { TranslateService } from "@ngx-translate/core";
import { CachedListsService, FilterConfig } from "@shared";

@Injectable({
  providedIn: "root",
})
export class FilterOpportunityService {
  #cachedLists = inject(CachedListsService);
  #translate = inject(TranslateService);

  opportunityFilters(): FilterConfig[] {
    return [
      {
        type: "select",
        name: "pipeline_stage_ids",
        label: this.#translate.instant(_("stages")),
        group: true,
        options: this.#cachedLists.loadLists().get("pipelines:deal_pipeline_stages") || [],
        default: null,
        is_required: false,
        is_multiple: true,
        is_hidden: false,
      },
      {
        type: "select",
        name: "assignees_ids",
        label: this.#translate.instant(_("assignees")),
        options: this.#cachedLists.loadLists().get("assignments:users") || [],
        default: null,
        is_required: false,
        is_multiple: true,
        is_hidden: false,
      },
      {
        type: "select",
        name: "assignees_groups_ids",
        label: this.#translate.instant(_("assignees_groups")),
        options: this.#cachedLists.loadLists().get("users:groups") || [],
        default: null,
        is_required: false,
        is_multiple: true,
        is_hidden: false,
      },
      {
        type: "select",
        name: "sources_ids",
        label: this.#translate.instant(_("sources")),
        options: this.#cachedLists.loadLists().get("dynamic_list:sources") || [],
        default: null,
        is_required: false,
        is_multiple: true,
        is_hidden: false,
      },
      {
        type: "select",
        name: "interests_ids",
        label: this.#translate.instant(_("interests")),
        options: this.#cachedLists.loadLists().get("interests:interests") || [],
        default: null,
        is_required: false,
        is_multiple: true,
        is_hidden: false,
      },
      {
        type: "select",
        name: "tags_ids",
        label: this.#translate.instant(_("tags")),
        options: this.#cachedLists.loadLists().get("tags:tags") || [],
        default: null,
        is_required: false,
        is_multiple: true,
        is_hidden: false,
      },
      {
        type: "select",
        name: "brokers_ids",
        label: this.#translate.instant(_("brokers")),
        options: this.#cachedLists.loadLists().get("brokers:brokers") || [],
        default: null,
        is_required: false,
        is_multiple: true,
        is_hidden: false,
      },
      {
        type: "select",
        name: "lost_reason_ids",
        label: this.#translate.instant(_("lost_reasons")),
        options: this.#cachedLists.loadLists().get("opportunities:lost_reason") || [],
        default: null,
        is_required: false,
        is_multiple: true,
        is_hidden: false,
      },
      {
        type: "daterange",
        name: "created_at_range",
        label: this.#translate.instant(_("creation_date_range")),
        default: null,
        is_required: false,
        is_hidden: false,
      },
      {
        type: "daterange",
        name: "closed_at_range",
        label: this.#translate.instant(_("closing_date_range")),
        default: null,
        is_required: false,
        is_hidden: false,
      },
      // advanced filters
      {
        type: "select",
        name: "creators_ids",
        label: this.#translate.instant(_("created_by")),
        options: this.#cachedLists.loadLists().get("assignments:users") || [],
        default: null,
        is_required: false,
        is_multiple: true,
        is_hidden: false,
        is_advanced: true,
      },
      {
        type: "select",
        name: "events_created_by_ids",
        label: this.#translate.instant(_("events_created_by")),
        options: this.#cachedLists.loadLists().get("assignments:users") || [],
        default: null,
        is_required: false,
        is_multiple: true,
        is_hidden: false,
        is_advanced: true,
      },
      {
        type: "daterange",
        name: "expected_closing_date",
        label: this.#translate.instant(_("expected_closing_date")),
        default: null,
        is_required: false,
        is_hidden: false,
        is_advanced: true,
      },
      {
        type: "switcher",
        name: "anded_tags",
        label: this.#translate.instant(_("anded_tags")),
        default: null,
        is_required: false,
        is_hidden: false,
        is_advanced: true,
      },
      {
        type: "switcher",
        name: "anded_interests",
        label: this.#translate.instant(_("anded_interests")),
        default: null,
        is_required: false,
        is_hidden: false,
        is_advanced: true,
      },
      {
        type: "switcher",
        name: "without_lost_reasons",
        label: this.#translate.instant(_("without_lost_reasons")),
        default: null,
        is_required: false,
        is_hidden: false,
        is_advanced: true,
      },
      {
        type: "switcher",
        name: "won_without_closed_by_at",
        label: this.#translate.instant(_("won_without_closed_by_at")),
        default: null,
        is_required: false,
        is_hidden: false,
        is_advanced: true,
      },
    ];
  }
}
